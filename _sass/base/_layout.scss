////
/// Layout
////

$gutter: var(--base-em);
$number: 4; // for equal columns

// Page & Wrapper
// -------------------------

.page {
  margin-right: auto;
  margin-left: auto;
  max-width: 100%;
  padding-bottom: calc(var(--base-line) * 4);
}

.wrapper {
  box-sizing: content-box;
  margin-right: auto;
  margin-left: auto;
  max-width: 50em;
  padding-left: 10px;
  padding-right: 10px;
}

.frontpage {
  max-width: 64em;
}

// Inspired from RaphaÃ«l Goetter Knacss grid
// grid styles for container wich has a .grid(n,g) class
// n = number of columns (default = 4)
// g = gutter value (default = 1em)
// example : .grid { .grid(12, 10px); }
// ---------------------------------------------------------------------------

@mixin grid($number:$number, $gutter:$gutter) {
  /* inline-block fallback for IE9 generation */
  letter-spacing: -0.31em;
  text-rendering: optimizespeed;

  @supports (display: flex) {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }

  margin-left: -2vw;
  margin-right: -2vw;
  @media #{$medium-up} {
    margin-left: -$gutter/2;
    margin-right: -$gutter/2;
  }
  margin-bottom: var(--base-line);

  & > * {
    margin-left: 2vw;
    margin-right: 2vw;
    @media #{$medium-up} {
      margin-left: $gutter/2;
      margin-right: $gutter/2;
    }
    margin-bottom: var(--base-line);

    /* inline-block fallback for IE9 generation */
    display: inline-block;
    width: calc(100% * 1 / #{$number} - #{$gutter} - .01px);
    vertical-align: top;
    letter-spacing: normal;
    text-rendering: auto;
    @supports (display: flex) {
      flex: 1 0 10em;
      @media #{$medium-up} {
        flex: 0 0 calc(100% * 1 / #{$number} - #{$gutter} - .01px);
        width: auto;
      }
    }
  }
  & > .flexitem-double {
    width: calc(100% * 2 / #{$number} - #{$gutter});
    @supports (display: flex) {
      flex: 0 0 calc(100% * 2 / #{$number} - #{$gutter});
      width: auto;
    }
  }
  & > .flexitem-first {
    order: -1;
  }
}

.grid {
  @include grid();
}
